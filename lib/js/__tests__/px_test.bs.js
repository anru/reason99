// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/lib/js/src/jest.js");
var Block = require("bs-platform/lib/js/block.js");
var Main$Reason99 = require("../src/Main.bs.js");

describe("99 problems", (function () {
        Jest.test("p01_1", (function () {
                return Jest.Expect[/* toEqual */12](/* Some */[47], Jest.Expect[/* expect */0](Main$Reason99.last_element(/* :: */[
                                    12,
                                    /* :: */[
                                      21,
                                      /* :: */[
                                        47,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("p01_2", (function () {
                return Jest.Expect[/* toBe */2](/* None */0, Jest.Expect[/* expect */0](Main$Reason99.last_element(/* [] */0)));
              }));
        Jest.test("p02_1", (function () {
                return Jest.Expect[/* toEqual */12](/* Some */[/* tuple */[
                              21,
                              47
                            ]], Jest.Expect[/* expect */0](Main$Reason99.last_two(/* :: */[
                                    12,
                                    /* :: */[
                                      21,
                                      /* :: */[
                                        47,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("p02_2", (function () {
                return Jest.Expect[/* toEqual */12](/* Some */[/* tuple */[
                              "21",
                              "47"
                            ]], Jest.Expect[/* expect */0](Main$Reason99.last_two(/* :: */[
                                    "12",
                                    /* :: */[
                                      "21",
                                      /* :: */[
                                        "47",
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("p02_3", (function () {
                return Jest.Expect[/* toBe */2](/* None */0, Jest.Expect[/* expect */0](Main$Reason99.last_two(/* :: */[
                                    12,
                                    /* [] */0
                                  ])));
              }));
        Jest.test("p03_1", (function () {
                return Jest.Expect[/* toEqual */12](/* Some */[21], Jest.Expect[/* expect */0](Main$Reason99.at(1, /* :: */[
                                    12,
                                    /* :: */[
                                      21,
                                      /* :: */[
                                        47,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("p03_2", (function () {
                return Jest.Expect[/* toEqual */12](/* Some */[47], Jest.Expect[/* expect */0](Main$Reason99.at(2, /* :: */[
                                    12,
                                    /* :: */[
                                      21,
                                      /* :: */[
                                        47,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("p03_2", (function () {
                return Jest.Expect[/* toEqual */12](/* None */0, Jest.Expect[/* expect */0](Main$Reason99.at(6, /* :: */[
                                    12,
                                    /* :: */[
                                      21,
                                      /* :: */[
                                        47,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("p04_1", (function () {
                return Jest.Expect[/* toEqual */12](3, Jest.Expect[/* expect */0](Main$Reason99.length(/* :: */[
                                    12,
                                    /* :: */[
                                      21,
                                      /* :: */[
                                        47,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("p04_1", (function () {
                return Jest.Expect[/* toEqual */12](0, Jest.Expect[/* expect */0](Main$Reason99.length(/* [] */0)));
              }));
        Jest.test("p05_1", (function () {
                return Jest.Expect[/* toEqual */12](/* :: */[
                            47,
                            /* :: */[
                              21,
                              /* :: */[
                                12,
                                /* [] */0
                              ]
                            ]
                          ], Jest.Expect[/* expect */0](Main$Reason99.reverse(/* :: */[
                                    12,
                                    /* :: */[
                                      21,
                                      /* :: */[
                                        47,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("p05_2", (function () {
                return Jest.Expect[/* toEqual */12](/* [] */0, Jest.Expect[/* expect */0](Main$Reason99.reverse(/* [] */0)));
              }));
        Jest.test("p06_1", (function () {
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](Main$Reason99.is_palindrome(/* :: */[
                                    1,
                                    /* :: */[
                                      2,
                                      /* :: */[
                                        3,
                                        /* :: */[
                                          2,
                                          /* :: */[
                                            1,
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("p06_1", (function () {
                return Jest.Expect[/* toBe */2](/* true */1, Jest.Expect[/* expect */0](Main$Reason99.is_palindrome(/* :: */[
                                    1,
                                    /* :: */[
                                      2,
                                      /* :: */[
                                        2,
                                        /* :: */[
                                          1,
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("p06_1", (function () {
                return Jest.Expect[/* toBe */2](/* false */0, Jest.Expect[/* expect */0](Main$Reason99.is_palindrome(/* :: */[
                                    1,
                                    /* :: */[
                                      2,
                                      /* :: */[
                                        2,
                                        /* :: */[
                                          2,
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        var nested_list = /* :: */[
          /* One */Block.__(0, ["a"]),
          /* :: */[
            /* Many */Block.__(1, [/* :: */[
                  /* One */Block.__(0, ["b"]),
                  /* :: */[
                    /* Many */Block.__(1, [/* :: */[
                          /* One */Block.__(0, ["c"]),
                          /* :: */[
                            /* One */Block.__(0, ["d"]),
                            /* [] */0
                          ]
                        ]]),
                    /* :: */[
                      /* One */Block.__(0, ["e"]),
                      /* [] */0
                    ]
                  ]
                ]]),
            /* [] */0
          ]
        ];
        var flattened_list = /* :: */[
          "a",
          /* :: */[
            "b",
            /* :: */[
              "c",
              /* :: */[
                "d",
                /* :: */[
                  "e",
                  /* [] */0
                ]
              ]
            ]
          ]
        ];
        Jest.test("flatten", (function () {
                return Jest.Expect[/* toEqual */12](flattened_list, Jest.Expect[/* expect */0](Main$Reason99.flatten(nested_list)));
              }));
        Jest.test("flatten2", (function () {
                return Jest.Expect[/* toEqual */12](flattened_list, Jest.Expect[/* expect */0](Main$Reason99.flatten2(nested_list)));
              }));
        var llist = /* :: */[
          "a",
          /* :: */[
            "a",
            /* :: */[
              "a",
              /* :: */[
                "a",
                /* :: */[
                  "b",
                  /* :: */[
                    "c",
                    /* :: */[
                      "c",
                      /* :: */[
                        "a",
                        /* :: */[
                          "a",
                          /* :: */[
                            "d",
                            /* :: */[
                              "e",
                              /* :: */[
                                "e",
                                /* :: */[
                                  "e",
                                  /* :: */[
                                    "e",
                                    /* [] */0
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ];
        Jest.test("compress", (function () {
                return Jest.Expect[/* toEqual */12](/* :: */[
                            "a",
                            /* :: */[
                              "b",
                              /* :: */[
                                "c",
                                /* :: */[
                                  "a",
                                  /* :: */[
                                    "d",
                                    /* :: */[
                                      "e",
                                      /* [] */0
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ], Jest.Expect[/* expect */0](Main$Reason99.compress(llist)));
              }));
        Jest.test("compress2", (function () {
                return Jest.Expect[/* toEqual */12](/* :: */[
                            "a",
                            /* :: */[
                              "b",
                              /* :: */[
                                "c",
                                /* :: */[
                                  "a",
                                  /* :: */[
                                    "d",
                                    /* :: */[
                                      "e",
                                      /* [] */0
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ], Jest.Expect[/* expect */0](Main$Reason99.compress2(llist)));
              }));
        Jest.test("pack", (function () {
                return Jest.Expect[/* toEqual */12](/* :: */[
                            /* :: */[
                              "a",
                              /* :: */[
                                "a",
                                /* :: */[
                                  "a",
                                  /* :: */[
                                    "a",
                                    /* [] */0
                                  ]
                                ]
                              ]
                            ],
                            /* :: */[
                              /* :: */[
                                "b",
                                /* [] */0
                              ],
                              /* :: */[
                                /* :: */[
                                  "c",
                                  /* :: */[
                                    "c",
                                    /* [] */0
                                  ]
                                ],
                                /* :: */[
                                  /* :: */[
                                    "a",
                                    /* :: */[
                                      "a",
                                      /* [] */0
                                    ]
                                  ],
                                  /* :: */[
                                    /* :: */[
                                      "d",
                                      /* :: */[
                                        "d",
                                        /* [] */0
                                      ]
                                    ],
                                    /* :: */[
                                      /* :: */[
                                        "e",
                                        /* :: */[
                                          "e",
                                          /* :: */[
                                            "e",
                                            /* :: */[
                                              "e",
                                              /* [] */0
                                            ]
                                          ]
                                        ]
                                      ],
                                      /* [] */0
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ], Jest.Expect[/* expect */0](Main$Reason99.pack(/* :: */[
                                    "a",
                                    /* :: */[
                                      "a",
                                      /* :: */[
                                        "a",
                                        /* :: */[
                                          "a",
                                          /* :: */[
                                            "b",
                                            /* :: */[
                                              "c",
                                              /* :: */[
                                                "c",
                                                /* :: */[
                                                  "a",
                                                  /* :: */[
                                                    "a",
                                                    /* :: */[
                                                      "d",
                                                      /* :: */[
                                                        "d",
                                                        /* :: */[
                                                          "e",
                                                          /* :: */[
                                                            "e",
                                                            /* :: */[
                                                              "e",
                                                              /* :: */[
                                                                "e",
                                                                /* [] */0
                                                              ]
                                                            ]
                                                          ]
                                                        ]
                                                      ]
                                                    ]
                                                  ]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        var list_10 = /* :: */[
          "a",
          /* :: */[
            "a",
            /* :: */[
              "a",
              /* :: */[
                "a",
                /* :: */[
                  "b",
                  /* :: */[
                    "c",
                    /* :: */[
                      "c",
                      /* :: */[
                        "a",
                        /* :: */[
                          "a",
                          /* :: */[
                            "d",
                            /* :: */[
                              "e",
                              /* :: */[
                                "e",
                                /* :: */[
                                  "e",
                                  /* :: */[
                                    "e",
                                    /* [] */0
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ];
        var list_10_rl = /* :: */[
          /* tuple */[
            4,
            "a"
          ],
          /* :: */[
            /* tuple */[
              1,
              "b"
            ],
            /* :: */[
              /* tuple */[
                2,
                "c"
              ],
              /* :: */[
                /* tuple */[
                  2,
                  "a"
                ],
                /* :: */[
                  /* tuple */[
                    1,
                    "d"
                  ],
                  /* :: */[
                    /* tuple */[
                      4,
                      "e"
                    ],
                    /* [] */0
                  ]
                ]
              ]
            ]
          ]
        ];
        Jest.test("encode_rl", (function () {
                return Jest.Expect[/* toEqual */12](list_10_rl, Jest.Expect[/* expect */0](Main$Reason99.encode_rl(list_10)));
              }));
        return Jest.test("encode_with_pack_rl", (function () {
                      return Jest.Expect[/* toEqual */12](list_10_rl, Jest.Expect[/* expect */0](Main$Reason99.encode_with_pack_rl(list_10)));
                    }));
      }));

/*  Not a pure module */
